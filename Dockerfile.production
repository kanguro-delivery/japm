# ====================================
# Multi-stage Dockerfile for JAPM API
# ====================================

# ---- Base Node ----
FROM node:20-slim AS base
WORKDIR /usr/src/app
RUN apt-get update && apt-get install -y dumb-init openssl && rm -rf /var/lib/apt/lists/*
# Ensure Prisma can find OpenSSL
ENV OPENSSL_ENGINES=/usr/lib/x86_64-linux-gnu/engines-3
ENV OPENSSL_CONF=/etc/ssl/openssl.cnf

# ---- Dependencies ----
FROM base AS dependencies
# Copy package.json and package-lock.json
COPY package*.json ./
# Install all dependencies
RUN npm install
# Copy Prisma schema and pre-generated client
COPY prisma ./prisma/
RUN npx prisma generate

# ---- Builder ----
FROM dependencies AS builder
# Copy the rest of the source code
COPY . .
# Compile the application
RUN npm run build

# ---- Release ----
FROM base AS release
# Copy package.json and package-lock.json
COPY package*.json ./
# Install only production dependencies
RUN npm install --omit=dev
# Copy compiled artifacts from builder stage
COPY --from=builder /usr/src/app/dist ./dist
# Copy Prisma schema and migrations
COPY --from=builder /usr/src/app/prisma ./prisma
# Copy generated Prisma client
COPY --from=builder /usr/src/app/node_modules/.prisma ./node_modules/.prisma

# Expose application port (adjust if different)
EXPOSE 3001

# Default environment variables (can be overridden)
ENV NODE_ENV=production
# ENV DATABASE_URL="your_production_database_url" # Make sure to configure this!

# Use existing node user (already exists in node:20-slim)
USER node

# Command to run the application
CMD ["dumb-init", "node", "dist/src/main.js"]